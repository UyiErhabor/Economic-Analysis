================================================================================
# PLOT 3: UK GDP (2012-2022)
# =================================================================================

# Work on a copy of the DataFrame
df = uk_gdp_2012_2022.copy()

# Convert GDP to billions for better readability
df['GDP'] = df['GDP'] / 1_000

# Create the plot
fig, ax = plt.subplots(figsize=(16, 9))
plt.subplots_adjust(bottom=0.3, right=0.8)

# Plot the GDP trend line
ax.plot(df['Year'], df['GDP'], color='#1f77b4', linewidth=2, label='UK GDP')

# Highlight the COVID-19 Impact period
covid_start_year = 2020.0
covid_recovery_end_year = 2021.0
ax.axvspan(covid_start_year, covid_recovery_end_year, color='red', alpha=0.15, label='COVID-19 Pandemic Impact')
ax.axvline(x=covid_start_year, color='red', linestyle='--', linewidth=1.5, label='Start of COVID-19 (2020 Q1)')

# Annotations to tell the story
gdp_2014_Q2 = df[df['Year'] == 2014.25]['GDP'].iloc[0]
gdp_2020_Q1 = df[df['Year'] == 2020.0]['GDP'].iloc[0]
gdp_2020_Q2 = df[df['Year'] == 2020.25]['GDP'].iloc[0]
gdp_2021_Q2 = df[df['Year'] == 2021.25]['GDP'].iloc[0]

percent_decrease_2020 = ((gdp_2020_Q1 - gdp_2020_Q2) / gdp_2020_Q1) * 100
percent_decrease_text = f"a {percent_decrease_2020:.1f}% decrease"

ax.annotate('Increases in GDP between 2012 - 2020 in the UK',
            xy=(2014.25, gdp_2014_Q2),
            xytext=(2011.8, 445),
            xycoords='data', textcoords='data',
            arrowprops=dict(facecolor='black', shrink=0.05, width=1, headwidth=6, connectionstyle="arc3,rad=0"),
            fontsize=10, color='black',
            horizontalalignment='left', verticalalignment='top',
            bbox=dict(boxstyle="round,pad=0.3", fc="white", ec="none", alpha=0.7),
            wrap=True)

ax.annotate(f'Sharp decline in GDP by 21% in Q2 2020 relative to Q1 2020 due to less economic activity. For example, UK citizens working in industries such as hospitality were furloughed and the demand of corresponding consumers in those sectors naturally declined',
            xy=(2020.25, gdp_2020_Q2),
            xytext=(ax.get_xlim()[1] + 0.5, 470),
            xycoords='data', textcoords='data',
            arrowprops=dict(facecolor='black', shrink=0.05, width=1, headwidth=6, connectionstyle="arc3,rad=0"),
            fontsize=10, color='black',
            fontweight='normal',
            horizontalalignment='left', verticalalignment='center',
            bbox=dict(boxstyle="round,pad=0.3", fc="white", ec="none", alpha=0.7),
            wrap=True)

ax.annotate('Post-lockdown recovery in GDP growth',
            xy=(2021.25, gdp_2021_Q2),
            xytext=(ax.get_xlim()[1] + 0.5, 550),
            xycoords='data', textcoords='data',
            arrowprops=dict(facecolor='black', shrink=0.05, width=1, headwidth=6, connectionstyle="arc3,rad=0"),
            fontsize=10, color='black',
            horizontalalignment='left', verticalalignment='center',
            bbox=dict(boxstyle="round,pad=0.3", fc="white", ec="none", alpha=0.7),
            wrap=True)

# Plot Aesthetics and Labels
sns.despine(fig=fig, ax=ax)
ax.set_xlabel('Year', fontsize=12, fontweight='bold')
ax.set_ylabel('GDP (Â£ Billions)', fontsize=12, fontweight='bold')
ax.set_title('UK GDP (2012-2022)', fontsize=16, fontweight='bold')

ax.set_xlim(2011.5, 2023.5)
major_ticks = np.arange(int(df['Year'].min()), int(df['Year'].max()) + 2, 2)
ax.set_xticks(major_ticks)
minor_ticks = np.arange(df['Year'].min(), df['Year'].max() + 0.25, 0.25)
ax.set_xticks(minor_ticks, minor=True)

def format_year_label(x, pos):
    return f"{int(x)}"

ax.xaxis.set_major_formatter(FuncFormatter(format_year_label))
ax.tick_params(axis='x', rotation=0)

ax.legend(loc='upper left', fontsize=10)

plt.show()
